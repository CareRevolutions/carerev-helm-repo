---
# Source: web/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: web
  labels:
    helm.sh/chart: web-0.45.0
    app.kubernetes.io/name: web
    app.kubernetes.io/instance: web
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: web/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: web
  labels:
    helm.sh/chart: web-0.45.0
    app.kubernetes.io/name: web
    app.kubernetes.io/instance: web
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: web
    app.kubernetes.io/instance: web
---
# Source: web/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
  labels:
    helm.sh/chart: web-0.45.0
    app.kubernetes.io/name: web
    app.kubernetes.io/instance: web
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  
  selector:
    matchLabels:
      app.kubernetes.io/name: web
      app.kubernetes.io/instance: web
  template:
    metadata:
      annotations:
        helm.sh/revision: "1"
      labels:
        app.kubernetes.io/name: web
        app.kubernetes.io/instance: web
    spec:
      serviceAccountName: web
      terminationGracePeriodSeconds: 30
      containers:
        - name: web
          image: "public.ecr.aws/o1j4x7p4/hello-porter:latest"
          imagePullPolicy: Always
          securityContext:
            capabilities:
              drop:
              - all
            fsGroup: 1000
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          
          
          
          
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              memory: 256Mi
          env:
            # Porter default environment variables
            - name: PORTER_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: PORTER_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: PORTER_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: PORTER_POD_IMAGE_TAG
              value: "latest"
            - name: PORTER_POD_REVISION
              value: "1"
            - name: PORT
              value: "80"
---
# Source: web/templates/ingress.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: web-int-web
  namespace: istio-ingress
spec:
  dnsNames:
  issuerRef:
    group: cert-manager.io
    kind: ClusterIssuer
    name: letsencrypt-staging
  secretName: web-int-web-tls
  usages:
    - digital signature
    - key encipherment
---
# Source: web/templates/ingress.yaml
apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: web
spec:
  selector:
    app: istio-ingressgateway
  servers:
    - port:
        number: 80
        name: http
        protocol: HTTP
      hosts:
      tls:
        httpsRedirect: true
    - port:
        number: 443
        name: https
        protocol: HTTPS
      hosts:
      tls:
        mode: SIMPLE
        credentialName: web-int-web-tls
---
# Source: web/templates/ingress.yaml
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: web
spec:
  hosts:
  gateways:
    - web
  http:
    - match:
        - uri:
            prefix: /
      route:
        - destination:
            port:
              number: 80
            host: web
---
# Source: web/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "web-test-connection"
  labels:
    helm.sh/chart: web-0.45.0
    app.kubernetes.io/name: web
    app.kubernetes.io/instance: web
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['web:80']
      securityContext:
        runAsNonRoot: true
        readOnlyRootFilesystem: true
        capabilities:
          drop: ["all"]
      resources:
        request:
          memory: 32Mi
        limits:
          memory: 32Mi
  restartPolicy: Never
